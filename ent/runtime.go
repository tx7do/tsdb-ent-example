// Code generated by entc, DO NOT EDIT.

package ent

import (
	"tsdb-ent-example/ent/attributekv"
	"tsdb-ent-example/ent/schema"
	"tsdb-ent-example/ent/sensor"
	"tsdb-ent-example/ent/tskv"
	"tsdb-ent-example/ent/tskvdictionary"
	"tsdb-ent-example/ent/tskvlatest"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	attributekvFields := schema.AttributeKV{}.Fields()
	_ = attributekvFields
	// attributekvDescEntityType is the schema descriptor for entity_type field.
	attributekvDescEntityType := attributekvFields[0].Descriptor()
	// attributekv.EntityTypeValidator is a validator for the "entity_type" field. It is called by the builders before save.
	attributekv.EntityTypeValidator = attributekvDescEntityType.Validators[0].(func(string) error)
	// attributekvDescAttributeType is the schema descriptor for attribute_type field.
	attributekvDescAttributeType := attributekvFields[2].Descriptor()
	// attributekv.AttributeTypeValidator is a validator for the "attribute_type" field. It is called by the builders before save.
	attributekv.AttributeTypeValidator = attributekvDescAttributeType.Validators[0].(func(string) error)
	// attributekvDescAttributeKey is the schema descriptor for attribute_key field.
	attributekvDescAttributeKey := attributekvFields[3].Descriptor()
	// attributekv.AttributeKeyValidator is a validator for the "attribute_key" field. It is called by the builders before save.
	attributekv.AttributeKeyValidator = attributekvDescAttributeKey.Validators[0].(func(string) error)
	// attributekvDescStrV is the schema descriptor for str_v field.
	attributekvDescStrV := attributekvFields[5].Descriptor()
	// attributekv.StrVValidator is a validator for the "str_v" field. It is called by the builders before save.
	attributekv.StrVValidator = attributekvDescStrV.Validators[0].(func(string) error)
	sensorFields := schema.Sensor{}.Fields()
	_ = sensorFields
	// sensorDescType is the schema descriptor for type field.
	sensorDescType := sensorFields[0].Descriptor()
	// sensor.DefaultType holds the default value on creation for the type field.
	sensor.DefaultType = sensorDescType.Default.(string)
	// sensor.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	sensor.TypeValidator = sensorDescType.Validators[0].(func(string) error)
	// sensorDescLocation is the schema descriptor for location field.
	sensorDescLocation := sensorFields[1].Descriptor()
	// sensor.DefaultLocation holds the default value on creation for the location field.
	sensor.DefaultLocation = sensorDescLocation.Default.(string)
	// sensor.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	sensor.LocationValidator = sensorDescLocation.Validators[0].(func(string) error)
	tskvFields := schema.TsKv{}.Fields()
	_ = tskvFields
	// tskvDescStrV is the schema descriptor for str_v field.
	tskvDescStrV := tskvFields[3].Descriptor()
	// tskv.StrVValidator is a validator for the "str_v" field. It is called by the builders before save.
	tskv.StrVValidator = tskvDescStrV.Validators[0].(func(string) error)
	tskvdictionaryFields := schema.TsKvDictionary{}.Fields()
	_ = tskvdictionaryFields
	// tskvdictionaryDescKey is the schema descriptor for key field.
	tskvdictionaryDescKey := tskvdictionaryFields[0].Descriptor()
	// tskvdictionary.KeyValidator is a validator for the "key" field. It is called by the builders before save.
	tskvdictionary.KeyValidator = func() func(string) error {
		validators := tskvdictionaryDescKey.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(key string) error {
			for _, fn := range fns {
				if err := fn(key); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	tskvlatestFields := schema.TsKvLatest{}.Fields()
	_ = tskvlatestFields
	// tskvlatestDescStrV is the schema descriptor for str_v field.
	tskvlatestDescStrV := tskvlatestFields[3].Descriptor()
	// tskvlatest.StrVValidator is a validator for the "str_v" field. It is called by the builders before save.
	tskvlatest.StrVValidator = tskvlatestDescStrV.Validators[0].(func(string) error)
}
